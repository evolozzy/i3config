#!/bin/bash

sinkflag=0
step=`grep "STEP" /usr/local/bin/volumeconfig | awk '{print $2}'`
max=`grep "MAX" /usr/local/bin/volumeconfig | awk '{print $2}'`
sname=`basename $0`
default_sink="@DEFAULT_SINK@"

function adjustvol {
	pactl set-sink-volume "$1" $2
}

signalvol=`pkill -RTMIN+10 i3blocks`

function checkvol {
	if [ $1 -gt $max ] ; then
		vol=$max
	elif [ $1 -lt 0 ] ; then
		vol=0
	else
		vol=$1
	fi
	delim="$vol%"
}

function getcurrent {
	current=`pactl list | grep RUNNING -B 1 -A 10 | grep "Sink #$1" -A 10 | grep 'Sink\|Volume' | sed  -n -E 's/(^|.*[^0-9])([0-9]{1,3})%.*/\2/p'`
	if [ -z $current ] ; then
		current=`pactl list | grep 'RUNNING\|SUSPENDED\|IDLE' -B 1 -A 10 | grep "Sink #$1" -A 10 | grep 'Sink\|Volume' | sed  -n -E 's/(^|.*[^0-9])([0-9]{1,3})%.*/\2/p'`
	fi

}

function getsinks {
	sinks=`pactl list | grep RUNNING -B 1 | grep -oP 'Sink #\K([0-9]+)'`
	if [ -z $sinks ] ; then
		sinks=`pactl list | grep 'RUNNING\|SUSPENDED\|IDLE' -B 1 | grep -oP 'Sink #\K([0-9]+)'`
	fi
	numsinks=`echo $sinks | wc -w`
}

function help {
	echo "Correct usage:  $sname [OPTIONS]" 
	echo " "
	echo "If you want to change the sink use '-s <sink>' before 'u' or 'd' "
	echo "To increase volume:             $sname u"
	echo "To decrease volume:             $sname d"
	echo "To directly adjust volume:      $sname <NUM> (1-100 or 1-LEVELS according to your configuration)"
	echo "To mute:                        $sname mute"
	echo "To select sink:                 $sname -s <sink> (Default: @DEFAULT_SINK@)"
	echo "To display help:                $sname -h or $name --help"
}

function setvol {
	case "$1" in
                1)
                        pre="+"
                        vol=$(( $2 + $3 ))
                        ;;
                2)
                        pre="-"
                        vol=$(( $2 - $3 ))
                        ;;
                *)
                        echo "ERROR : setvol"
                        exit 0
                        ;;
        esac
}


getsinks

if [ -z $1 ] ; then
	for sink in $sinks ; do
		getcurrent $sink
		echo "Sink #$sink Volume=$current"
	done
	exit 0
elif [ "$1" -eq "$1" ] 2>/dev/null ; then
       	for sink in $sinks ; do
		vol=$1
		getcurrent $sink
                checkvol $vol
                adjustvol $sink $delim
	done
	exit 0
elif [ "$1" == "mute" ] ; then
	for sink in $sinks ; do
		com="toggle"
       		pactl set-sink-mute "$sink" "$com"
	done
	exit 0
else
	while test $# -gt 0; do
	case "$1" in
		-h|--help)
			help
			exit 0
			;;
		u|-u)
			OPER=1
			break
			;;
		d|-d)
			OPER=2
			break
			;;
		s|-s)
			sinkflag=1
			shift
			sink=$1
			shift
			getcurrent $sink
			if [ -z $1 ] ; then
				echo "Sink: $sink"
				echo "Volume: $current"
				exit 0
			fi
			;;
		*)
			help
			exit 0
			;;
	esac
	done
fi


if [ $sinkflag -eq 1 ] ; then
	getcurrent $sink
	setvol $OPER $current $step
	checkvol $vol
	adjustvol $sink $delim 
else
	getsinks
	for sink in $sinks ; do
		getcurrent $sink
		setvol $OPER $current $step
		checkvol $vol
		adjustvol $sink $delim
	done
fi

